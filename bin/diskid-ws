#!/usr/bin/env ruby
require 'sinatra'
require 'alchemist'

DOCS = """
<h1>Virtual Disk Identification Service</h1>

This web service gives you info about a virtual disk file.

<h2>Installation:</h2>

<i>gem install diskid</i>
<br/>

<h2>Usage:</h2>

<i>diskid path-to-disk-file.vmdk</i>
<br/>
<br/>

<b>Supported formats:</b> vvfat vpc vmdk vdi sheepdog raw host_cdrom host_floppy host_device file qed qcow2 qcow parallels nbd dmg tftp ftps ftp https http cow cloop bochs blkverify blkdebug

<p>
<b>About diskid</b>
<br/>
<i>diskid and the web service that powers this site are open source software:</i>
<br/>
<br/>
<a href='http://github.com/rubiojr/diskid'>http://github.com/rubiojr/diskid</a>
</p>

"""
class DiskIDWS < Sinatra::Base

  post '/' do
    tmpfile = params[:chunk][:tempfile] rescue nil
    file_name = (params[:file_name] || '') rescue ''

    if tmpfile.nil? 
      halt 400, "Couldn't understand the file you sent me dude."
    end
    file_size = params[:file_size]
    out = `qemu-img-bleeding info #{tmpfile.path}`
    if $? != 0
      halt 400, "Couldn't understand the file you sent me dude."
    end

    begin
      buf = ''
      if file_name.empty?
        buf << "\nSome fields are being omitted and 'disk size:' won't be accurate.\n"
        buf << "Use diskid command for better results\n\n"
      else
        buf << "file name: #{file_name}\n"
      end
      out.each_line do |l|
        buf << l if l !~ /(image:|disk size:)/
      end

      buf << "disk size: #{'%.0f' % file_size.to_i.bytes.to.megabytes.to_f}M (#{file_size} bytes)\n"
      tmpfile.close
      FileUtils.rm_f tmpfile.path
      buf
    rescue => e
      puts $!
      puts $@
      halt 400, "Something bad happened :("
    end
  end

  get '/service-check' do
    DOCS
  end

  error do
    DOCS
  end

  not_found do
    DOCS
  end

end

DiskIDWS.set :bind => '127.0.0.1'
#DiskIDWS.set :raise_errors => false
DiskIDWS.set :show_exceptions => false
DiskIDWS.set :logging => true
DiskIDWS.run!
